//file dialog.jsuser

require("base");
require("wnd");
Class(function main(){
	initUI();
},true);
function initUI(){
	//生成一个 frame 对象（顶级窗口）。
	var frame = new CFrame();
	frame.text = "Common Dialog Example";
	//设置窗口记住自己的位置和大小。
	frame.setRemPos("main_wnd");
	//生成一个编辑控件对象
	var edit = new CEdit();
	//添加多行、自动垂直滚动、垂直滚动条三个属性，编辑控件默认是单行的。
	edit.style |= 0x4|0x40|0x00200000;
	//移除自动水平滚动属性，让编辑控件有类似于记事本的自动换行功能。
	edit.style -= 0x80;
	//5个按钮控件
	var buts = [];
	for(var i=0;i<5;i++){
		var but = new CButton();
		buts.push(but);
		but.setPosition(10+80*i,10);	//设置位置
		but.id = 0x100 + i;	//设置 id
		but.setSize(70,30);	//设置尺寸
		//设置按钮的命令响应函数
		but.onCommand = function(id){
			if(id==0x100){
				var fd = new CFileDialog();
				fd.multiSelect = true;	//设置多选
				fd.addFilter("文本文件","txt,ini");	//添加文件过滤
				var fn = fd.showOpen(frame.handle());	//显示对话框
				if(fn){
					if(fn.path){
						var str = fn.path;
						for(var i=0;i<fn.length;i++){
							str += "," + fn[i];
						}
						edit.text = str;
					}else{
						edit.text = fn;
					}
				}
				fd.dispose();	//释放对话框对象，这一步非常重要。
			}else if(id==0x101){
				var fd = new CFileDialog();
				fd.defExt = "txt";	//缺省后缀
				fd.addFilter("文本文件","txt,ini");	//文件过滤
				var fn = fd.showSave(frame.handle());	//显示保存对话框
				if(fn){
					edit.text = fn;
				}
				fd.dispose();	//非常重要
			}else if(id==0x102){
				var folder = showFolderDialog(frame.handle(),edit.text);	//显示选择文件夹对话框
				if(folder){
					edit.text = folder;
				}
			}else if(id==0x103){
				var fd = new CFontDialog();
				//这个回调函数，点击应用按钮时被回调，点击确定按钮也会触发这个函数。
				fd.onApply = function(logfont){
					font.logfont = logfont;	//设置字体的 logfont
					font.create();	//重新生成字体
					edit.setFont(font);	//设置编辑控件的字体
				}
				fd.show();	//显示选择字体对话框
				fd.dispose();	//非常重要
			}else if(id==0x104){
				var color = showColorDialog(frame.handle(),edit.fontColor);	//显示选择颜色对话框
				if(color!==undefined){	//返回值可能是 0 ，表示黑色。
					edit.fontColor = color;
				}
			}
		}
	}
	//设置按钮的文本
	buts[0].text = "打开文件";
	buts[1].text = "保存文件";
	buts[2].text = "选择文件夹";
	buts[3].text = "选择字体";
	buts[4].text = "选择颜色";
	//设置主窗口创建时的回调函数。
	frame.onCreate = function(){
		//这时候主窗口还没有显示出来，在 onCreate 内部创建子窗口，子窗口不能先于主窗口创建。
		//设置背景色。
		edit.bkColor = 0x000000;
		//设置字体颜色（0xFFFF）。
		var fc = new Color(255,255);
		edit.fontColor = fc.getIntValue();
		//设置编辑控件的位置。
		edit.setPosition(10,50);
		//生成编辑控件。
		edit.create(frame.handle());
		edit.setFont(font);
		//生成按钮控件。
		for(var i=0;i<buts.length;i++){
			buts[i].create(frame.handle());
		}
	}
	//设置主窗口的尺寸变化回调函数
	frame.onSize = function(cx,cy){
		//设置编辑控件的大小随主窗口大小变化。
		edit.setSize(cx-20,cy-60);
	}
	//生成一个字体对象
	var font = new CFont();
	font.size = 20;
	font.create();
	
	frame.create();

	//开始消息循环，如果不调用这个函数，应用程序会自己退出。
	startMsgLoop();
}
main();