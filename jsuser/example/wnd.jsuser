
//file: wnd.jsuser
"use strict"

require("base");
require("wnd");

Class(function main(){
	//生成一个 frame 对象（顶级窗口）。
	var frame = new CFrame();
	frame.text = "Jsuser Wnd Example";
	//设置窗口记住自己的位置和大小。
	frame.setRemPos("main_wnd");
	//生成一个编辑控件对象
	var child = new CEdit();
	//添加多行、自动垂直滚动、垂直滚动条三个属性，编辑控件默认是单行的。
	child.style |= 0x4|0x40|0x00200000;
	//移除自动水平滚动属性，让编辑控件有类似于记事本的自动换行功能。
	child.style -= 0x80;
	//设置主窗口创建时的回调函数。
	frame.onCreate = function(){
		//这时候主窗口还没有显示出来，在 onCreate 内部创建子窗口，子窗口不能先于主窗口创建。
		//设置背景色。
		child.bkColor = 0x000000;
		//设置字体颜色（0xFFFF）。
		var fc = new Color(255,255);
		child.fontColor = fc.getIntValue();
		//设置编辑控件的位置。
		child.setPosition(10,10);
		//生成编辑控件。
		child.create(frame.handle());
	}
	//设置主窗口的尺寸变化回调函数
	frame.onSize = function(cx,cy){
		//设置编辑控件的大小随主窗口大小变化。
		child.setSize(cx-20,cy-20);
	}
	//生成一个字体对象
	var font = new CFont();
	//获取 Jsuser 系统的缺省字体。
	font.fromDefault();
	//设置缺省字体的大小为 30 （字体高度像素数）。
	font.size = 30;
	//重新生成缺省字体，使上述设置生效。
	font.create();
	//生成主窗口，这个函数返回时，onCreate 也已经执行。缺省字体必须在控件生成之前设置，否则需要对每个控件重新调用 child.setFont(font)；
	frame.create();
	
	var file = new CFile();
	file.create("console.jsuser");
	child.text = file.readString(undefined);
	file.dispose();
	//开始消息循环，如果不调用这个函数，应用程序会自己退出。
	startMsgLoop();
},true);

main();