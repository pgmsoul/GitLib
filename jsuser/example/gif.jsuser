
//file: gif.jsuser
"use strict"

require("base");
require("wnd");
Class(function main(){
	var bmps = saveGif();
	showGif(bmps);
},true);
//函数：动态显示 gif 图像。
function showGif(bmps){
	//创建主窗口
	var frame = new CFrame();
	//设置主窗口记住自己的位置和大小
	frame.setRemPos("main");
	//声明一个整数变量，用于保存当前图像的索引。
	var imgIndex = 0;
	//设置绘图回调函数，绘图函数必须在这个回调里调用。
	frame.onDraw = function(hdc){
		//在点 10,10 位置按原大小绘图。
		bmps[imgIndex].draw(hdc,10,10);
	}
	//生成主窗口
	frame.create();
	//设置一个 timer，每 200 毫秒调用一次。
	setTimer(20000,function(){
		//索引 +1
		imgIndex++;
		if(imgIndex==bmps.length) imgIndex = 0;
		//主窗口标题显示当前索引。
		frame.text = imgIndex;
		//刷新窗口的显示，这个函数强制 onDraw 回调函数被呼叫。
		frame.invalidate();
	});
	//开始消息循环。
	startMsgLoop();
}
//分解 gif 图像
function saveGif(){
	//生成一个图像加载对象，要加载多帧 gif 必须使用这个对象。
	var gifloader = new CImageLoader();
	var count = gifloader.load("image/scratch.gif");
	if(!count) throw "can't load image.gif";
	//生成一个文件夹用于保存分解后的每帧图像
	FileSystem.createFolder("gif");
	//用于保存图像的数组。
	var a = [];
	for(var i=0;i<count;i++){
		var bmp = new CBitmap();
		a.push(bmp);
		//获取指定索引的图像，保存在数组中。如果是大图像一般不要这么做，因为图像非常占用系统资源，应该临时加载，使用完立即释放。
		if(!gifloader.getBitmap(bmp,i)) throw "getBimap failed!";
		var fn = "";
		if(i<10) fn = "gif/gif0"+i+".jpg";
		else fn = "gif/gif"+i+".jpg";
		//保存为 jpg 文件。
		if(!bmp.save(fn)) throw "save jpg error";
	}
	return a;
}
main();